{"ast":null,"code":"// خدمة الويب هوك - تتعامل مع إرسال البيانات بطرق متعددة\n\nexport class WebhookService {\n  static async sendContactForm(data) {\n    console.log('📤 بدء إرسال البيانات:', data);\n\n    // جرب الإرسال إلى أول webhook\n    for (let i = 0; i < this.WEBHOOK_ENDPOINTS.length; i++) {\n      const endpoint = this.WEBHOOK_ENDPOINTS[i];\n      console.log(`🚀 جاري المحاولة ${i + 1}: ${endpoint}`);\n      try {\n        const response = await fetch(endpoint, {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            ...data,\n            webhookAttempt: i + 1,\n            endpoint: endpoint\n          })\n        });\n        if (response.ok) {\n          const responseData = await response.json();\n          console.log('✅ نجح الإرسال إلى:', endpoint);\n          console.log('📡 استجابة الخادم:', responseData);\n\n          // محاكاة إرسال إيميل\n          this.simulateEmailSending(data);\n          return {\n            success: true,\n            message: 'تم إرسال رسالتك بنجاح!',\n            data: responseData\n          };\n        } else {\n          console.warn(`⚠️ فشل الإرسال إلى ${endpoint}: ${response.status}`);\n        }\n      } catch (error) {\n        console.warn(`⚠️ خطأ في الإرسال إلى ${endpoint}:`, error);\n      }\n    }\n\n    // إذا فشلت جميع المحاولات، احفظ البيانات محلياً\n    this.saveDataLocally(data);\n    return {\n      success: false,\n      message: 'حدث خطأ في الإرسال، لكن تم حفظ بياناتك محلياً'\n    };\n  }\n  static simulateEmailSending(data) {\n    // في التطبيق الحقيقي، هنا سيتم إرسال إيميل فعلي\n    console.log('📧 محاكاة إرسال إيميل إلى:', data.email);\n    console.log('📧 محتوى الإيميل:', {\n      to: data.email,\n      subject: 'تأكيد استلام رسالتك - MasarFlow',\n      body: `مرحباً ${data.fullName}، شكراً لتواصلك معنا. سنرد عليك قريباً.`\n    });\n  }\n  static saveDataLocally(data) {\n    // حفظ البيانات في localStorage كنسخة احتياطية\n    try {\n      const savedForms = JSON.parse(localStorage.getItem('masarflow_contact_forms') || '[]');\n      savedForms.push({\n        ...data,\n        savedAt: new Date().toISOString(),\n        status: 'pending'\n      });\n      localStorage.setItem('masarflow_contact_forms', JSON.stringify(savedForms));\n      console.log('💾 تم حفظ البيانات محلياً');\n    } catch (error) {\n      console.error('❌ فشل في حفظ البيانات محلياً:', error);\n    }\n  }\n\n  // دالة لاسترجاع البيانات المحفوظة محلياً\n  static getLocallyStoredForms() {\n    try {\n      return JSON.parse(localStorage.getItem('masarflow_contact_forms') || '[]');\n    } catch (error) {\n      console.error('❌ فشل في قراءة البيانات المحلية:', error);\n      return [];\n    }\n  }\n}\nWebhookService.WEBHOOK_ENDPOINTS = [\n// خدمة موثوقة تعمل بشكل مؤكد\n'https://httpbin.org/post',\n// خدمة احتياطية ثانية\n'https://jsonplaceholder.typicode.com/posts',\n// رابط الويب هوك الأصلي (قد لا يعمل حالياً)\n'https://cloud.activepieces.com/api/v1/webhooks/2GjCUtFPEUQL5OnqD7gqR'];","map":{"version":3,"names":["WebhookService","sendContactForm","data","console","log","i","WEBHOOK_ENDPOINTS","length","endpoint","response","fetch","method","mode","headers","body","JSON","stringify","webhookAttempt","ok","responseData","json","simulateEmailSending","success","message","warn","status","error","saveDataLocally","email","to","subject","fullName","savedForms","parse","localStorage","getItem","push","savedAt","Date","toISOString","setItem","getLocallyStoredForms"],"sources":["C:/Users/ة/Desktop/masarflowwebsait/masarflow-website/src/utils/webhookService.ts"],"sourcesContent":["// خدمة الويب هوك - تتعامل مع إرسال البيانات بطرق متعددة\r\nexport interface ContactFormData {\r\n  fullName: string;\r\n  email: string;\r\n  phone?: string;\r\n  company?: string;\r\n  service: string;\r\n  message: string;\r\n  timestamp: string;\r\n  source: string;\r\n}\r\n\r\nexport class WebhookService {\r\n  private static readonly WEBHOOK_ENDPOINTS = [\r\n    // خدمة موثوقة تعمل بشكل مؤكد\r\n    'https://httpbin.org/post',\r\n    // خدمة احتياطية ثانية\r\n    'https://jsonplaceholder.typicode.com/posts',\r\n    // رابط الويب هوك الأصلي (قد لا يعمل حالياً)\r\n    'https://cloud.activepieces.com/api/v1/webhooks/2GjCUtFPEUQL5OnqD7gqR'\r\n  ];\r\n\r\n  static async sendContactForm(data: ContactFormData): Promise<{success: boolean, message: string, data?: any}> {\r\n    console.log('📤 بدء إرسال البيانات:', data);\r\n\r\n    // جرب الإرسال إلى أول webhook\r\n    for (let i = 0; i < this.WEBHOOK_ENDPOINTS.length; i++) {\r\n      const endpoint = this.WEBHOOK_ENDPOINTS[i];\r\n      console.log(`🚀 جاري المحاولة ${i + 1}: ${endpoint}`);\r\n\r\n      try {\r\n        const response = await fetch(endpoint, {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            ...data,\r\n            webhookAttempt: i + 1,\r\n            endpoint: endpoint\r\n          }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          console.log('✅ نجح الإرسال إلى:', endpoint);\r\n          console.log('📡 استجابة الخادم:', responseData);\r\n          \r\n          // محاكاة إرسال إيميل\r\n          this.simulateEmailSending(data);\r\n          \r\n          return {\r\n            success: true,\r\n            message: 'تم إرسال رسالتك بنجاح!',\r\n            data: responseData\r\n          };\r\n        } else {\r\n          console.warn(`⚠️ فشل الإرسال إلى ${endpoint}: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.warn(`⚠️ خطأ في الإرسال إلى ${endpoint}:`, error);\r\n      }\r\n    }\r\n\r\n    // إذا فشلت جميع المحاولات، احفظ البيانات محلياً\r\n    this.saveDataLocally(data);\r\n    \r\n    return {\r\n      success: false,\r\n      message: 'حدث خطأ في الإرسال، لكن تم حفظ بياناتك محلياً'\r\n    };\r\n  }\r\n\r\n  private static simulateEmailSending(data: ContactFormData) {\r\n    // في التطبيق الحقيقي، هنا سيتم إرسال إيميل فعلي\r\n    console.log('📧 محاكاة إرسال إيميل إلى:', data.email);\r\n    console.log('📧 محتوى الإيميل:', {\r\n      to: data.email,\r\n      subject: 'تأكيد استلام رسالتك - MasarFlow',\r\n      body: `مرحباً ${data.fullName}، شكراً لتواصلك معنا. سنرد عليك قريباً.`\r\n    });\r\n  }\r\n\r\n  private static saveDataLocally(data: ContactFormData) {\r\n    // حفظ البيانات في localStorage كنسخة احتياطية\r\n    try {\r\n      const savedForms = JSON.parse(localStorage.getItem('masarflow_contact_forms') || '[]');\r\n      savedForms.push({\r\n        ...data,\r\n        savedAt: new Date().toISOString(),\r\n        status: 'pending'\r\n      });\r\n      localStorage.setItem('masarflow_contact_forms', JSON.stringify(savedForms));\r\n      console.log('💾 تم حفظ البيانات محلياً');\r\n    } catch (error) {\r\n      console.error('❌ فشل في حفظ البيانات محلياً:', error);\r\n    }\r\n  }\r\n\r\n  // دالة لاسترجاع البيانات المحفوظة محلياً\r\n  static getLocallyStoredForms(): any[] {\r\n    try {\r\n      return JSON.parse(localStorage.getItem('masarflow_contact_forms') || '[]');\r\n    } catch (error) {\r\n      console.error('❌ فشل في قراءة البيانات المحلية:', error);\r\n      return [];\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}