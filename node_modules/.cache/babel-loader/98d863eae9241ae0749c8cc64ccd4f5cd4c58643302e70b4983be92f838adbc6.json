{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst SEOHead = ({\n  title,\n  description,\n  keywords\n}) => {\n  _s();\n  useEffect(() => {\n    // Update document title\n    const fullTitle = title.includes('MasarFlow') ? title : `${title} | MasarFlow - مسار فلو`;\n    document.title = fullTitle;\n\n    // Update meta description\n    const metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (metaDescription) {\n      metaDescription.setAttribute('content', description);\n    } else {\n      const meta = document.createElement('meta');\n      meta.name = 'description';\n      meta.content = description;\n      document.head.appendChild(meta);\n    }\n\n    // Update meta keywords if provided\n    if (keywords) {\n      const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n      if (metaKeywords) {\n        metaKeywords.setAttribute('content', keywords);\n      } else {\n        const meta = document.createElement('meta');\n        meta.name = 'keywords';\n        meta.content = keywords;\n        document.head.appendChild(meta);\n      }\n    }\n\n    // Update Open Graph tags\n    const updateOGTag = (property, content) => {\n      let ogTag = document.querySelector(`meta[property=\"${property}\"]`);\n      if (ogTag) {\n        ogTag.setAttribute('content', content);\n      } else {\n        ogTag = document.createElement('meta');\n        ogTag.setAttribute('property', property);\n        ogTag.setAttribute('content', content);\n        document.head.appendChild(ogTag);\n      }\n    };\n    updateOGTag('og:title', fullTitle);\n    updateOGTag('og:description', description);\n    updateOGTag('og:type', 'website');\n    updateOGTag('og:site_name', 'MasarFlow');\n    updateOGTag('og:locale', 'ar_SA');\n  }, [title, description, keywords]);\n  return null;\n};\n_s(SEOHead, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SEOHead;\nexport default SEOHead;\nvar _c;\n$RefreshReg$(_c, \"SEOHead\");","map":{"version":3,"names":["useEffect","SEOHead","title","description","keywords","_s","fullTitle","includes","document","metaDescription","querySelector","setAttribute","meta","createElement","name","content","head","appendChild","metaKeywords","updateOGTag","property","ogTag","_c","$RefreshReg$"],"sources":["C:/Users/ة/Desktop/masarflowwebsait/masarflow-website/src/components/SEOHead.tsx"],"sourcesContent":["import { useEffect } from 'react';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  keywords?: string;\n}\n\nconst SEOHead: React.FC<SEOHeadProps> = ({ title, description, keywords }) => {\n  useEffect(() => {\n    // Update document title\n    const fullTitle = title.includes('MasarFlow') ? title : `${title} | MasarFlow - مسار فلو`;\n    document.title = fullTitle;\n    \n    // Update meta description\n    const metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (metaDescription) {\n      metaDescription.setAttribute('content', description);\n    } else {\n      const meta = document.createElement('meta');\n      meta.name = 'description';\n      meta.content = description;\n      document.head.appendChild(meta);\n    }\n    \n    // Update meta keywords if provided\n    if (keywords) {\n      const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n      if (metaKeywords) {\n        metaKeywords.setAttribute('content', keywords);\n      } else {\n        const meta = document.createElement('meta');\n        meta.name = 'keywords';\n        meta.content = keywords;\n        document.head.appendChild(meta);\n      }\n    }\n    \n    // Update Open Graph tags\n    const updateOGTag = (property: string, content: string) => {\n      let ogTag = document.querySelector(`meta[property=\"${property}\"]`);\n      if (ogTag) {\n        ogTag.setAttribute('content', content);\n      } else {\n        ogTag = document.createElement('meta');\n        ogTag.setAttribute('property', property);\n        ogTag.setAttribute('content', content);\n        document.head.appendChild(ogTag);\n      }\n    };\n    \n    updateOGTag('og:title', fullTitle);\n    updateOGTag('og:description', description);\n    updateOGTag('og:type', 'website');\n    updateOGTag('og:site_name', 'MasarFlow');\n    updateOGTag('og:locale', 'ar_SA');\n    \n  }, [title, description, keywords]);\n  \n  return null;\n};\n\nexport default SEOHead;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAQjC,MAAMC,OAA+B,GAAGA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5EL,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,SAAS,GAAGJ,KAAK,CAACK,QAAQ,CAAC,WAAW,CAAC,GAAGL,KAAK,GAAG,GAAGA,KAAK,yBAAyB;IACzFM,QAAQ,CAACN,KAAK,GAAGI,SAAS;;IAE1B;IACA,MAAMG,eAAe,GAAGD,QAAQ,CAACE,aAAa,CAAC,0BAA0B,CAAC;IAC1E,IAAID,eAAe,EAAE;MACnBA,eAAe,CAACE,YAAY,CAAC,SAAS,EAAER,WAAW,CAAC;IACtD,CAAC,MAAM;MACL,MAAMS,IAAI,GAAGJ,QAAQ,CAACK,aAAa,CAAC,MAAM,CAAC;MAC3CD,IAAI,CAACE,IAAI,GAAG,aAAa;MACzBF,IAAI,CAACG,OAAO,GAAGZ,WAAW;MAC1BK,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;IACjC;;IAEA;IACA,IAAIR,QAAQ,EAAE;MACZ,MAAMc,YAAY,GAAGV,QAAQ,CAACE,aAAa,CAAC,uBAAuB,CAAC;MACpE,IAAIQ,YAAY,EAAE;QAChBA,YAAY,CAACP,YAAY,CAAC,SAAS,EAAEP,QAAQ,CAAC;MAChD,CAAC,MAAM;QACL,MAAMQ,IAAI,GAAGJ,QAAQ,CAACK,aAAa,CAAC,MAAM,CAAC;QAC3CD,IAAI,CAACE,IAAI,GAAG,UAAU;QACtBF,IAAI,CAACG,OAAO,GAAGX,QAAQ;QACvBI,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;MACjC;IACF;;IAEA;IACA,MAAMO,WAAW,GAAGA,CAACC,QAAgB,EAAEL,OAAe,KAAK;MACzD,IAAIM,KAAK,GAAGb,QAAQ,CAACE,aAAa,CAAC,kBAAkBU,QAAQ,IAAI,CAAC;MAClE,IAAIC,KAAK,EAAE;QACTA,KAAK,CAACV,YAAY,CAAC,SAAS,EAAEI,OAAO,CAAC;MACxC,CAAC,MAAM;QACLM,KAAK,GAAGb,QAAQ,CAACK,aAAa,CAAC,MAAM,CAAC;QACtCQ,KAAK,CAACV,YAAY,CAAC,UAAU,EAAES,QAAQ,CAAC;QACxCC,KAAK,CAACV,YAAY,CAAC,SAAS,EAAEI,OAAO,CAAC;QACtCP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACI,KAAK,CAAC;MAClC;IACF,CAAC;IAEDF,WAAW,CAAC,UAAU,EAAEb,SAAS,CAAC;IAClCa,WAAW,CAAC,gBAAgB,EAAEhB,WAAW,CAAC;IAC1CgB,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC;IACjCA,WAAW,CAAC,cAAc,EAAE,WAAW,CAAC;IACxCA,WAAW,CAAC,WAAW,EAAE,OAAO,CAAC;EAEnC,CAAC,EAAE,CAACjB,KAAK,EAAEC,WAAW,EAAEC,QAAQ,CAAC,CAAC;EAElC,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CApDIJ,OAA+B;AAAAqB,EAAA,GAA/BrB,OAA+B;AAsDrC,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}